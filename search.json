[{"path":"https://davzim.github.io/rbm25/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 rbm25 authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Zimmermann-Kollenda. Author, maintainer. Michael Barlow. Author.           bm25 Rust library Authors dependency Rust crates. Author.           see AUTHORS file","code":""},{"path":"https://davzim.github.io/rbm25/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zimmermann-Kollenda D, Michael Barlow, Authors dependency Rust crates (2025). rbm25: light wrapper around BM25 rust crate Okapi BM25 text search. R package version 0.0.1, https://github.com/DavZim/rbm25/, https://davzim.github.io/rbm25/.","code":"@Manual{,   title = {rbm25: A light wrapper around the BM25 rust crate for Okapi BM25 text search},   author = {David Zimmermann-Kollenda and {Michael Barlow} and {Authors of the dependency Rust crates}},   year = {2025},   note = {R package version 0.0.1, https://github.com/DavZim/rbm25/},   url = {https://davzim.github.io/rbm25/}, }"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"Authors of vendored cargo crates"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- ahash 0.8.11: Tom Kaitchuck"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- allocator-api2 0.2.21: Zakarum"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- bm25 0.3.1: Michael"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- bumpalo 3.16.0: Nick Fitzgerald"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- byteorder 1.5.0: Andrew Gallant"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- cached 0.53.1: James Kominick"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- cached_proc_macro 0.23.0: csos95, James Kominick"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- cached_proc_macro_types 0.1.1: James Kominick"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- cfg-if 1.0.0: Alex Crichton"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- darling 0.20.10: Ted Driggs"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- darling_core 0.20.10: Ted Driggs"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- darling_macro 0.20.10: Ted Driggs"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- extendr-api 0.7.1: andy-thomason, Thomas Down, Mossa Merhi Reimert, Claus O. Wilke, Hiroaki Yutani, Ilia A. Kosenkov, Michael Milton"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- extendr-macros 0.7.1: andy-thomason, Thomas Down, Mossa Merhi Reimert, Claus O. Wilke, Hiroaki Yutani, Ilia A. Kosenkov, Michael Milton"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- fnv 1.0.7: Alex Crichton"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- fxhash 0.2.1: cbreeden"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- hashbrown 0.14.5: Amanieu d'Antras"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- ident_case 1.0.1: Ted Driggs"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- itoa 1.0.14: David Tolnay"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- js-sys 0.3.76: The wasm-bindgen Developers"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- libR-sys 0.7.1: andy-thomason, Thomas Down, Mossa Merhi Reimert, Claus O. Wilke, Ilia A. Kosenkov, Hiroaki Yutani"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- log 0.4.22: The Rust Project Developers"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- memchr 2.7.4: Andrew Gallant, bluss"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- once_cell 1.20.2: Aleksey Kladov"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- paste 1.0.15: David Tolnay"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- proc-macro2 1.0.92: David Tolnay, Alex Crichton"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- quote 1.0.38: David Tolnay"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- rust-stemmers 1.2.0: Jakob Demler, CurrySoftware"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- ryu 1.0.18: David Tolnay"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- serde 1.0.217: Erick Tryzelaar, David Tolnay"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- serde_derive 1.0.217: Erick Tryzelaar, David Tolnay"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- serde_json 1.0.135: Erick Tryzelaar, David Tolnay"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- stop-words 0.8.1: Chris McComb"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- strsim 0.11.1: Danny Guo, maxbachmann"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- syn 2.0.96: David Tolnay"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- thiserror 1.0.69: David Tolnay"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- thiserror-impl 1.0.69: David Tolnay"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- unicode-ident 1.0.14: David Tolnay"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- version_check 0.9.5: Sergio Benitez"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- wasm-bindgen 0.2.99: The wasm-bindgen Developers"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- wasm-bindgen-backend 0.2.99: The wasm-bindgen Developers"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- wasm-bindgen-macro 0.2.99: The wasm-bindgen Developers"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- wasm-bindgen-macro-support 0.2.99: The wasm-bindgen Developers"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- wasm-bindgen-shared 0.2.99: The wasm-bindgen Developers"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- whichlang 0.1.0: Quickwit, Inc."},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- zerocopy 0.7.35: Joshua Liebow-Feeser"},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"- zerocopy-derive 0.7.35: Joshua Liebow-Feeser"},{"path":[]},{"path":"https://davzim.github.io/rbm25/authors.html","id":null,"dir":"","previous_headings":"","what":"Additional details","title":"Authors and Citation","text":"","code":"(This file was auto-generated from 'cargo metadata' on 2025-01-10)"},{"path":"https://davzim.github.io/rbm25/index.html","id":"rbm25","dir":"","previous_headings":"","what":"A light wrapper around the BM25 rust crate for Okapi BM25 text search","title":"A light wrapper around the BM25 rust crate for Okapi BM25 text search","text":"rbm25 light wrapper around rust bm25 crate. provides simple interface Okapi BM25 algorithm text search. Note package provide text preprocessing, needs done using package.","code":""},{"path":"https://davzim.github.io/rbm25/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"A light wrapper around the BM25 rust crate for Okapi BM25 text search","text":"can install development version rbm25 like :","code":"# Development Version # devtools::install_github(\"DavZim/rbm25\")  # CRAN release install.packages(\"rbm25\")"},{"path":"https://davzim.github.io/rbm25/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"A light wrapper around the BM25 rust crate for Okapi BM25 text search","text":"package exposes R6 class BM25 can used query text corpus. simplicity, also bm25_score() function wraps BM25 class. Using BM25 Class Using bm25_score() function","code":"library(rbm25) # create a text corpus, where we want to find the closest matches for a query corpus_original <- c(   \"The rabbit munched the orange carrot.\",   \"The snake hugged the green lizard.\",   \"The hedgehog impaled the orange orange.\",   \"The squirrel buried the brown nut.\" )  # text preprocessing: tolower, remove punctuation, remove stopwords # note this is just an example and not the best way for larger amounts of text stopwords <- c(\"the\", \"a\", \"an\", \"and\") corpus <- corpus_original |>    tolower() |>    gsub(pattern = \"[[:punct:]]\", replacement = \"\") |>   gsub(pattern = paste0(\"\\\\b(\", paste(stopwords, collapse = \"|\"), \") *\\\\b\"),        replacement = \"\") |>    trimws()  # define some metadata for the text corpus, e.g., the original text and the source metadata <- data.frame(   text_original = corpus_original,   source = c(\"book1\", \"book2\", \"book3\", \"book4\") ) bm <- BM25$new(data = corpus, metadata = metadata) bm #> <BM25 (k1: 1.20, b: 0.75)> with 4 documents (language: 'Detect') #>   - Data & Metadata  #>                             text                  metadata.text_original #> 1   rabbit munched orange carrot   The rabbit munched the orange carrot. #> 2      snake hugged green lizard      The snake hugged the green lizard. #> 3 hedgehog impaled orange orange The hedgehog impaled the orange orange. #> 4      squirrel buried brown nut      The squirrel buried the brown nut. #>   metadata.source #> 1           book1 #> 2           book2 #> 3           book3 #> 4           book4  # note that query returns the values sorted by rank bm$query(query = \"orange\", max_n = 2) #>   id     score rank                           text #> 1  3 0.4904281    1 hedgehog impaled orange orange #> 2  1 0.3566750    2   rabbit munched orange carrot #>                             text_original source #> 1 The hedgehog impaled the orange orange.  book3 #> 2   The rabbit munched the orange carrot.  book1 # note that bm25_score returns the score in the order of the input data scores <- bm25_score(data = corpus, query = \"orange\") data.frame(text = corpus, scores_orange = scores) #>                             text scores_orange #> 1   rabbit munched orange carrot     0.3566750 #> 2      snake hugged green lizard     0.0000000 #> 3 hedgehog impaled orange orange     0.4904281 #> 4      squirrel buried brown nut     0.0000000"},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":null,"dir":"Reference","previous_headings":"","what":"BM25 Object — BM25","title":"BM25 Object — BM25","text":"Class construct BM25 search object","code":""},{"path":[]},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"public-methods","dir":"Reference","previous_headings":"","what":"Public methods","title":"BM25 Object — BM25","text":"BM25$new() BM25$available_languages() BM25$get_data() BM25$get_lang() BM25$print() BM25$add_data() BM25$query() BM25$clone()","code":""},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"method-new-","dir":"Reference","previous_headings":"","what":"Method new()","title":"BM25 Object — BM25","text":"Creates new instance BM25 class","code":""},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"BM25 Object — BM25","text":"","code":"BM25$new(data = NULL, lang = \"detect\", k1 = 1.2, b = 0.75, metadata = NULL)"},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"BM25 Object — BM25","text":"data text data, vector strings. Note preprocessing steps (tolower, removing stopwords etc) need taken place ! lang language data, see self$available_languages(), can also \"detect\" automatically detect language,  default \"detect\" k1 k1 parameter BM25, default 1.2 b b parameter BM25, default 0.75 metadata data.frame metadata document, default NULL must data.frame number rows containing arbitrary metadata document, e.g. file path URL","code":""},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"returns","dir":"Reference","previous_headings":"","what":"Returns","title":"BM25 Object — BM25","text":"BM25 object","code":""},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BM25 Object — BM25","text":"","code":"corpus <- c(  \"The rabbit munched the orange carrot.\",  \"The snake hugged the green lizard.\",  \"The hedgehog impaled the orange orange.\",  \"The squirrel buried the brown nut.\" ) bm25 <- BM25$new(data = corpus, lang = \"en\",                  metadata = data.frame(src = paste(\"file\", 1:4))) bm25 bm25$get_data()  bm25$query(\"orange\", max_n = 2) bm25$query(\"orange\", max_n = 3) bm25$query(\"orange\") # return all, same as max_n = Inf or NULL"},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"method-available-languages-","dir":"Reference","previous_headings":"","what":"Method available_languages()","title":"BM25 Object — BM25","text":"Returns available languages","code":""},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"usage-1","dir":"Reference","previous_headings":"","what":"Usage","title":"BM25 Object — BM25","text":"","code":"BM25$available_languages()"},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"returns-1","dir":"Reference","previous_headings":"","what":"Returns","title":"BM25 Object — BM25","text":"named character vector language codes full names","code":""},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"examples-1","dir":"Reference","previous_headings":"","what":"Examples","title":"BM25 Object — BM25","text":"","code":"BM25$new()$available_languages()"},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"method-get-data-","dir":"Reference","previous_headings":"","what":"Method get_data()","title":"BM25 Object — BM25","text":"Returns data","code":""},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"usage-2","dir":"Reference","previous_headings":"","what":"Usage","title":"BM25 Object — BM25","text":"","code":"BM25$get_data(add_metadata = TRUE)"},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"arguments-1","dir":"Reference","previous_headings":"","what":"Arguments","title":"BM25 Object — BM25","text":"add_metadata whether add metadata data, default TRUE","code":""},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"returns-2","dir":"Reference","previous_headings":"","what":"Returns","title":"BM25 Object — BM25","text":"data.frame data metadata available selected","code":""},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"examples-2","dir":"Reference","previous_headings":"","what":"Examples","title":"BM25 Object — BM25","text":"","code":"BM25$new(data = letters, metadata = LETTERS)$get_data()"},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"method-get-lang-","dir":"Reference","previous_headings":"","what":"Method get_lang()","title":"BM25 Object — BM25","text":"Returns language used","code":""},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"usage-3","dir":"Reference","previous_headings":"","what":"Usage","title":"BM25 Object — BM25","text":"","code":"BM25$get_lang()"},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"returns-3","dir":"Reference","previous_headings":"","what":"Returns","title":"BM25 Object — BM25","text":"character string language code","code":""},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"examples-3","dir":"Reference","previous_headings":"","what":"Examples","title":"BM25 Object — BM25","text":"","code":"BM25$new()$get_lang() BM25$new(lang = \"en\")$get_lang() BM25$new(lang = \"detect\")$get_lang()"},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"method-print-","dir":"Reference","previous_headings":"","what":"Method print()","title":"BM25 Object — BM25","text":"Prints BM25 object","code":""},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"usage-4","dir":"Reference","previous_headings":"","what":"Usage","title":"BM25 Object — BM25","text":"","code":"BM25$print(n = 5, nchar = 20)"},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"arguments-2","dir":"Reference","previous_headings":"","what":"Arguments","title":"BM25 Object — BM25","text":"n number data print, default 5 nchar number characters print text, default 20","code":""},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"returns-4","dir":"Reference","previous_headings":"","what":"Returns","title":"BM25 Object — BM25","text":"object invisible","code":""},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"examples-4","dir":"Reference","previous_headings":"","what":"Examples","title":"BM25 Object — BM25","text":"","code":"BM25$new(data = letters, metadata = LETTERS)"},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"method-add-data-","dir":"Reference","previous_headings":"","what":"Method add_data()","title":"BM25 Object — BM25","text":"Adds data BM25 object can useful add data later , note rebuild engine.","code":""},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"usage-5","dir":"Reference","previous_headings":"","what":"Usage","title":"BM25 Object — BM25","text":"","code":"BM25$add_data(data, metadata = NULL)"},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"arguments-3","dir":"Reference","previous_headings":"","what":"Arguments","title":"BM25 Object — BM25","text":"data vector strings metadata data.frame metadata document, default NULL","code":""},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"returns-5","dir":"Reference","previous_headings":"","what":"Returns","title":"BM25 Object — BM25","text":"NULL","code":""},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"examples-5","dir":"Reference","previous_headings":"","what":"Examples","title":"BM25 Object — BM25","text":"","code":"bm25 <- BM25$new() bm25$add_data(letters, metadata = LETTERS) bm25"},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"method-query-","dir":"Reference","previous_headings":"","what":"Method query()","title":"BM25 Object — BM25","text":"Query BM25 object N best matches","code":""},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"usage-6","dir":"Reference","previous_headings":"","what":"Usage","title":"BM25 Object — BM25","text":"","code":"BM25$query(query, max_n = NULL, return_text = TRUE, return_metadata = TRUE)"},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"arguments-4","dir":"Reference","previous_headings":"","what":"Arguments","title":"BM25 Object — BM25","text":"query term search , note preprocessing applied text corpus initially needs already performed term, e.g., tolower, removing stopwords etc max_n maximum number results return, default return_text whether return text, default TRUE return_metadata whether return metadata, default TRUE","code":""},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"returns-6","dir":"Reference","previous_headings":"","what":"Returns","title":"BM25 Object — BM25","text":"data.frame results","code":""},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"examples-6","dir":"Reference","previous_headings":"","what":"Examples","title":"BM25 Object — BM25","text":"","code":"corpus <- c(  \"The rabbit munched the orange carrot.\",  \"The snake hugged the green lizard.\",  \"The hedgehog impaled the orange orange.\",  \"The squirrel buried the brown nut.\" ) bm25 <- BM25$new(data = corpus, lang = \"en\",                  metadata = data.frame(src = paste(\"file\", 1:4)))  bm25$query(\"orange\", max_n = 2) bm25$query(\"orange\", max_n = 3) bm25$query(\"orange\", return_text = FALSE, return_metadata = FALSE) bm25$query(\"orange\", max_n = 3)"},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"method-clone-","dir":"Reference","previous_headings":"","what":"Method clone()","title":"BM25 Object — BM25","text":"objects class cloneable method.","code":""},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"usage-7","dir":"Reference","previous_headings":"","what":"Usage","title":"BM25 Object — BM25","text":"","code":"BM25$clone(deep = FALSE)"},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"arguments-5","dir":"Reference","previous_headings":"","what":"Arguments","title":"BM25 Object — BM25","text":"deep Whether make deep clone.","code":""},{"path":"https://davzim.github.io/rbm25/reference/BM25.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"BM25 Object — BM25","text":"","code":"corpus <- c(   \"The rabbit munched the orange carrot.\",   \"The snake hugged the green lizard.\",   \"The hedgehog impaled the orange orange.\",   \"The squirrel buried the brown nut.\" ) bm25 <- BM25$new(data = corpus, lang = \"en\",                  metadata = data.frame(src = paste(\"file\", 1:4))) bm25$query(\"orange\", max_n = 2) #>   id     score rank                                    text    src #> 1  3 0.4904281    1 The hedgehog impaled the orange orange. file 3 #> 2  1 0.3566750    2   The rabbit munched the orange carrot. file 1 bm25$query(\"orange\") #>   id     score rank                                    text    src #> 1  3 0.4904281    1 The hedgehog impaled the orange orange. file 3 #> 2  1 0.3566750    2   The rabbit munched the orange carrot. file 1 #> 3  2 0.0000000    3      The snake hugged the green lizard. file 2 #> 4  4 0.0000000    3      The squirrel buried the brown nut. file 4  ## ------------------------------------------------ ## Method `BM25$new` ## ------------------------------------------------  corpus <- c(  \"The rabbit munched the orange carrot.\",  \"The snake hugged the green lizard.\",  \"The hedgehog impaled the orange orange.\",  \"The squirrel buried the brown nut.\" ) bm25 <- BM25$new(data = corpus, lang = \"en\",                  metadata = data.frame(src = paste(\"file\", 1:4))) bm25 #> <BM25 (k1: 1.20, b: 0.75)> with 4 documents (language: 'English') #>   - Data & Metadata  #>                                      text metadata.src #> 1   The rabbit munched the orange carrot.       file 1 #> 2      The snake hugged the green lizard.       file 2 #> 3 The hedgehog impaled the orange orange.       file 3 #> 4      The squirrel buried the brown nut.       file 4 bm25$get_data() #>                                      text    src #> 1   The rabbit munched the orange carrot. file 1 #> 2      The snake hugged the green lizard. file 2 #> 3 The hedgehog impaled the orange orange. file 3 #> 4      The squirrel buried the brown nut. file 4  bm25$query(\"orange\", max_n = 2) #>   id     score rank                                    text    src #> 1  3 0.4904281    1 The hedgehog impaled the orange orange. file 3 #> 2  1 0.3566750    2   The rabbit munched the orange carrot. file 1 bm25$query(\"orange\", max_n = 3) #>   id     score rank                                    text    src #> 1  3 0.4904281    1 The hedgehog impaled the orange orange. file 3 #> 2  1 0.3566750    2   The rabbit munched the orange carrot. file 1 #> 3  2 0.0000000    3      The snake hugged the green lizard. file 2 bm25$query(\"orange\") # return all, same as max_n = Inf or NULL #>   id     score rank                                    text    src #> 1  3 0.4904281    1 The hedgehog impaled the orange orange. file 3 #> 2  1 0.3566750    2   The rabbit munched the orange carrot. file 1 #> 3  2 0.0000000    3      The snake hugged the green lizard. file 2 #> 4  4 0.0000000    3      The squirrel buried the brown nut. file 4  ## ------------------------------------------------ ## Method `BM25$available_languages` ## ------------------------------------------------  BM25$new()$available_languages() #>           ar           da           nl           en           fr           de  #>     \"arabic\"     \"danish\"      \"dutch\"    \"english\"     \"french\"     \"german\"  #>           el           hu           it           no           pt           ro  #>      \"greek\"  \"hungarian\"    \"italian\"  \"norwegian\" \"portuguese\"   \"romanian\"  #>           ru           es           sv           ta           tr         auto  #>    \"russian\"    \"spanish\"    \"swedish\"      \"tamil\"    \"turkish\"     \"detect\"   ## ------------------------------------------------ ## Method `BM25$get_data` ## ------------------------------------------------  BM25$new(data = letters, metadata = LETTERS)$get_data() #>    text metadata #> 1     a        A #> 2     b        B #> 3     c        C #> 4     d        D #> 5     e        E #> 6     f        F #> 7     g        G #> 8     h        H #> 9     i        I #> 10    j        J #> 11    k        K #> 12    l        L #> 13    m        M #> 14    n        N #> 15    o        O #> 16    p        P #> 17    q        Q #> 18    r        R #> 19    s        S #> 20    t        T #> 21    u        U #> 22    v        V #> 23    w        W #> 24    x        X #> 25    y        Y #> 26    z        Z  ## ------------------------------------------------ ## Method `BM25$get_lang` ## ------------------------------------------------  BM25$new()$get_lang() #> [1] \"Detect\" BM25$new(lang = \"en\")$get_lang() #> [1] \"English\" BM25$new(lang = \"detect\")$get_lang() #> [1] \"Detect\"  ## ------------------------------------------------ ## Method `BM25$print` ## ------------------------------------------------  BM25$new(data = letters, metadata = LETTERS) #> <BM25 (k1: 1.20, b: 0.75)> with 26 documents (language: 'Detect') #>   - Data & Metadata  #>   text metadata.metadata #> 1    a                 A #> 2    b                 B #> 3    c                 C #> 4    d                 D #> 5    e                 E #> ... ommited 6 entries (total 26)  ## ------------------------------------------------ ## Method `BM25$add_data` ## ------------------------------------------------  bm25 <- BM25$new() bm25$add_data(letters, metadata = LETTERS) bm25 #> <BM25 (k1: 1.20, b: 0.75)> with 26 documents (language: 'Detect') #>   - Data & Metadata  #>   text metadata.metadata #> 1    a                 A #> 2    b                 B #> 3    c                 C #> 4    d                 D #> 5    e                 E #> ... ommited 6 entries (total 26)  ## ------------------------------------------------ ## Method `BM25$query` ## ------------------------------------------------  corpus <- c(  \"The rabbit munched the orange carrot.\",  \"The snake hugged the green lizard.\",  \"The hedgehog impaled the orange orange.\",  \"The squirrel buried the brown nut.\" ) bm25 <- BM25$new(data = corpus, lang = \"en\",                  metadata = data.frame(src = paste(\"file\", 1:4)))  bm25$query(\"orange\", max_n = 2) #>   id     score rank                                    text    src #> 1  3 0.4904281    1 The hedgehog impaled the orange orange. file 3 #> 2  1 0.3566750    2   The rabbit munched the orange carrot. file 1 bm25$query(\"orange\", max_n = 3) #>   id     score rank                                    text    src #> 1  3 0.4904281    1 The hedgehog impaled the orange orange. file 3 #> 2  1 0.3566750    2   The rabbit munched the orange carrot. file 1 #> 3  2 0.0000000    3      The snake hugged the green lizard. file 2 bm25$query(\"orange\", return_text = FALSE, return_metadata = FALSE) #>   id     score rank #> 1  3 0.4904281    1 #> 2  1 0.3566750    2 #> 3  2 0.0000000    3 #> 4  4 0.0000000    3 bm25$query(\"orange\", max_n = 3) #>   id     score rank                                    text    src #> 1  3 0.4904281    1 The hedgehog impaled the orange orange. file 3 #> 2  1 0.3566750    2   The rabbit munched the orange carrot. file 1 #> 3  2 0.0000000    3      The snake hugged the green lizard. file 2"},{"path":"https://davzim.github.io/rbm25/reference/bm25_score.html","id":null,"dir":"Reference","previous_headings":"","what":"Score a text corpus based on the Okapi BM25 algorithm — bm25_score","title":"Score a text corpus based on the Okapi BM25 algorithm — bm25_score","text":"simple wrapper around BM25 class.","code":""},{"path":"https://davzim.github.io/rbm25/reference/bm25_score.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Score a text corpus based on the Okapi BM25 algorithm — bm25_score","text":"","code":"bm25_score(data, query, lang = NULL, k1 = 1.2, b = 0.75)"},{"path":"https://davzim.github.io/rbm25/reference/bm25_score.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Score a text corpus based on the Okapi BM25 algorithm — bm25_score","text":"data text data, vector strings. Note preprocessing steps (tolower, removing stopwords etc) need taken place ! query term search , note preprocessing applied text corpus initially needs already performed term, e.g., tolower, removing stopwords etc lang language data, see self$available_languages(), can also \"detect\" automatically detect language,  default \"detect\" k1 k1 parameter BM25, default 1.2 b b parameter BM25, default 0.75","code":""},{"path":"https://davzim.github.io/rbm25/reference/bm25_score.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Score a text corpus based on the Okapi BM25 algorithm — bm25_score","text":"numeric vector BM25 scores, note higher values showing higher relevance text query","code":""},{"path":[]},{"path":"https://davzim.github.io/rbm25/reference/bm25_score.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Score a text corpus based on the Okapi BM25 algorithm — bm25_score","text":"","code":"corpus <- c(  \"The rabbit munched the orange carrot.\",  \"The snake hugged the green lizard.\",  \"The hedgehog impaled the orange orange.\",  \"The squirrel buried the brown nut.\" ) scores <- bm25_score(data = corpus, query = \"orange\") data.frame(text = corpus, scores_orange = scores) #>                                      text scores_orange #> 1   The rabbit munched the orange carrot.     0.3566750 #> 2      The snake hugged the green lizard.     0.0000000 #> 3 The hedgehog impaled the orange orange.     0.4904281 #> 4      The squirrel buried the brown nut.     0.0000000"},{"path":"https://davzim.github.io/rbm25/news/index.html","id":"rbm25-01","dir":"Changelog","previous_headings":"","what":"rbm25 0.1","title":"rbm25 0.1","text":"initial functionality & tests","code":""}]
